services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: pierre
      POSTGRES_PASSWORD: password
      POSTGRES_DB: pierre
    ports: ["5432:5432"]
    volumes: [db-data:/var/lib/postgresql/data]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pierre -d pierre"]
      interval: 5s
      timeout: 5s
      retries: 20

  redis:
    image: redis:7
    ports: ["6379:6379"]

  # Only runs when explicitly invoked (profile "migrate")
  migrate:
    build:
      context: backend
      dockerfile: Dockerfile
    working_dir: /app
    env_file: [backend/.env]
    environment:
      PYTHONPATH: /app
    depends_on:
      postgres:
        condition: service_healthy
    command: bash -lc 'alembic upgrade head && python -m app.seed'
    profiles: ["migrate"]

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    working_dir: /app
    env_file: [backend/.env]
    environment:
      PYTHONPATH: /app
    command: python -m uvicorn app.main:app --host 0.0.0.0 --port 8080
    volumes:
      - ./backend:/app:cached
    depends_on:
      postgres:
        condition: service_healthy
    ports: ["8080:8080"]

  worker:
    build:
      context: backend
      dockerfile: Dockerfile
    working_dir: /app
    env_file: [backend/.env]
    environment:
      PYTHONPATH: /app
    command: celery --app app.tasks worker --loglevel=DEBUG -Q main-queue -c 1
    volumes:
      - ./backend:/app:cached
    depends_on:
      postgres:
        condition: service_healthy

  flower:
    image: mher/flower
    command: celery flower --port=5555
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
    ports: ["5555:5555"]
    depends_on: [redis]

  nginx:
    image: nginx:1.27-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports: ["8000:80"]
    depends_on: [backend, frontend]

  frontend:
    build:
      context: frontend
    environment:
      NODE_ENV: development
    volumes:
      - "./frontend:/app:cached"
      - "./frontend/node_modules:/app/node_modules:cached"

volumes:
  db-data:
