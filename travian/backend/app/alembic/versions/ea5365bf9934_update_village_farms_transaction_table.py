"""update village farms transaction table

Revision ID: ea5365bf9934
Revises: 
Create Date: 2025-03-01 08:25:17.226430-08:00

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ea5365bf9934'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('resources_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Enum('WOOD', 'CLAY', 'IRON', 'CROP', name='resource'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tribe_attributes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Enum('ROMANS', 'TEUTONS', 'GAULS', name='tribe'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('production',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('resource_type_id', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('production_value', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['resource_type_id'], ['resources_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('resource_type_id', 'level', name='uq_resource_level')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('tribe_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tribe_id'], ['tribe_attributes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('village',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('x', sa.Integer(), nullable=False),
    sa.Column('y', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('population', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('x', 'y', name='uq_village_coordinates')
    )
    op.create_table('village_farm_plots',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('village_id', sa.Integer(), nullable=False),
    sa.Column('resource_type_id', sa.Integer(), nullable=False),
    sa.Column('farm_number', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['resource_type_id'], ['resources_types.id'], ),
    sa.ForeignKeyConstraint(['village_id'], ['village.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('village_id', 'resource_type_id', 'farm_number', name='uq_village_farm')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('village_farm_plots')
    op.drop_table('village')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('production')
    op.drop_table('tribe_attributes')
    op.drop_table('resources_types')
    # ### end Alembic commands ###
