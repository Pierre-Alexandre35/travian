import { useContext, useMemo } from 'react';
import defaults from 'lodash/defaults';
import { ReferenceArrayInputContext, } from './ReferenceArrayInputContext';
/**
 * Hook to get the ReferenceArrayInputContext.
 */
export var useReferenceArrayInputContext = function (props) {
    var context = useContext(ReferenceArrayInputContext);
    // Props take precedence over the context
    return useMemo(function () {
        return defaults({}, props != null
            ? extractReferenceArrayInputContextProps(props)
            : {}, context);
    }, [context, props]);
};
var extractReferenceArrayInputContextProps = function (_a) {
    var choices = _a.choices, error = _a.error, loaded = _a.loaded, loading = _a.loading, setFilter = _a.setFilter, setPagination = _a.setPagination, setSort = _a.setSort, setSortForList = _a.setSortForList, warning = _a.warning;
    return ({
        choices: choices,
        error: error,
        loaded: loaded,
        loading: loading,
        setFilter: setFilter,
        setPagination: setPagination,
        setSort: setSort,
        setSortForList: setSortForList,
        warning: warning,
    });
};
